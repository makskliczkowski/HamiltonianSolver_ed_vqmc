#include <map>
#include <vector>

namespace Ultrametric_types
{
    // is done for N = 3, check if that matters for the other N
	static struct UM_default
	{
        const static int minNs_ = 7;

		// bandwidth
		static inline std::map<double, std::vector<double>> bandwidth_ = {
            { 0.600, { 10.64092862, 10.53428802, 10.92590309, 11.73709896, 13.17278362, 12.91268226, 13.08031584, 14.33141525, 13.75529694, 14.15529694  }},
            { 0.620, { 9.819239901, 12.72814192, 10.62030230, 12.44460316, 11.74220511, 12.55185806, 12.81071543, 13.21992117, 13.88783681, 14.18783681  }},
            { 0.640, { 10.86394920, 10.38175560, 11.79282141, 11.28184829, 11.42164885, 12.27168008, 12.95747231, 13.22283750, 13.29809073, 13.79809073  }},
            { 0.660, { 11.13153079, 10.15402384, 11.65625559, 11.29171469, 12.07877427, 12.08511766, 13.47879531, 13.22669245, 14.30243885, 14.70243885  }},
            { 0.680, { 10.87342632, 10.20726125, 10.89555645, 12.24862308, 12.17265339, 12.31032788, 12.91767312, 13.01724400, 13.75699668, 14.15699668  }},
            { 0.700, { 11.15989412, 10.27804083, 11.37443866, 12.78853149, 11.42851232, 13.10728887, 13.61839628, 12.90881318, 13.69174666, 14.09174666  }},
            { 0.720, { 10.48802575, 11.43035166, 12.45576767, 12.37548610, 12.00219825, 12.67026641, 13.30254690, 13.78742940, 13.47159135, 13.97159135  }},
            { 0.740, { 10.21578512, 12.42958586, 12.84607308, 11.63851778, 12.11355169, 13.02142706, 13.70339747, 13.41710416, 14.24182027, 14.54182027  }},
            { 0.760, { 11.20853452, 11.07601846, 12.20749934, 12.98619627, 12.42577103, 13.23881811, 13.39849651, 13.83799861, 14.26108004, 14.56108004  }},
            { 0.780, { 10.40794858, 11.56523259, 12.60760924, 12.17337097, 11.96585317, 14.38482021, 13.99829942, 13.15019409, 14.94075512, 14.94075512  }},
            { 0.800, { 9.663782696, 11.40860600, 11.38435426, 12.43161557, 12.59803215, 13.14080658, 13.74056155, 13.87236902, 14.72489892, 14.72489892  }},
            { 0.820, { 11.42969128, 12.15948898, 12.22605097, 12.15628823, 13.43909620, 13.65802295, 13.96983683, 14.74848907, 13.86014434, 14.26014434  }},
            { 0.840, { 11.31259559, 11.00462827, 12.06798124, 13.37343591, 12.27747104, 13.70152906, 13.75186662, 13.45741391, 14.68897824, 15.08897824  }},
            { 0.860, { 12.18989448, 10.86780368, 11.59005757, 13.20047324, 12.28018254, 12.94164988, 13.34988251, 13.81910505, 14.81879211, 15.21879211  }},
            { 0.880, { 10.25414586, 12.21957112, 11.49528536, 11.84004557, 12.45326328, 13.52086953, 13.79562509, 14.23811803, 14.78696013, 15.08696013  }},
            { 0.900, { 10.59550082, 10.88912390, 12.14975564, 12.31625947, 13.56660349, 14.01188585, 13.91789670, 14.41899331, 14.42103569, 14.82103569  }},
            { 0.920, { 11.11062290, 12.52919722, 12.16390365, 12.35103538, 12.89217063, 13.48617284, 13.43952661, 14.22502902, 14.76009597, 15.16009597  }},
            { 0.940, { 11.06534266, 11.87092737, 12.28927362, 13.11047875, 13.06046650, 14.02492438, 14.52162513, 15.11025115, 15.04983645, 15.44983645  }},
            { 0.960, { 11.37841829, 12.11759957, 13.19254084, 12.62881296, 14.42699570, 14.80889741, 13.39332469, 15.55257226, 15.06168321, 15.46168321  }},
            { 0.980, { 11.81380588, 11.49727943, 12.67090399, 12.82214586, 14.82873567, 13.87675921, 14.69583239, 14.93224393, 16.02984215, 16.42984215  }},
            { 1.000, { 11.80086256, 13.08994443, 12.85744035, 13.94175699, 14.34331188, 14.69325698, 15.48761247, 15.85742461, 16.15369466, 16.55369466  }}};

		// v }ariance
		static inline std::map<double, std::vector<double>> variance_ = {
            { 0.600, {6.118079578, 5.788936939, 6.101365956, 5.816331658, 5.735386828, 5.744850900, 5.765988548, 5.838643987, 5.833204657,  }},
            { 0.620, {5.958326852, 6.031032916, 5.887973518, 6.004224531, 5.767757438, 5.830502746, 5.816387538, 5.762687900, 5.849871958,  }},
            { 0.640, {5.831011398, 5.806839004, 6.199486065, 5.655543695, 5.976321385, 5.872084831, 5.956136000, 5.849796905, 5.860712521,  }},
            { 0.660, {6.003828120, 5.641217270, 5.889415808, 6.089281349, 5.990951015, 5.932307774, 5.952248253, 5.992755816, 5.928921719,  }},
            { 0.680, {6.010366205, 5.804156255, 5.496001703, 6.080299310, 5.859326116, 6.037863894, 5.914323584, 5.878345058, 5.978852702,  }},
            { 0.700, {6.624274142, 6.006356774, 5.616806113, 6.113274396, 6.045104481, 6.027421237, 5.966457465, 6.058360828, 6.014215860,  }},
            { 0.720, {5.699647735, 6.268457225, 5.965284029, 6.279349129, 5.979139379, 6.015135419, 6.079879599, 6.087251015, 6.062896746,  }},
            { 0.740, {6.494285414, 6.166219160, 6.476994629, 6.120217441, 6.206871092, 6.187394023, 6.193738294, 6.143074441, 6.118893907,  }},
            { 0.760, {5.613074520, 6.291055389, 6.271310465, 6.412044721, 6.247465299, 6.295352026, 6.225981967, 6.184968216, 6.270430364,  }},
            { 0.780, {5.874979102, 6.477976871, 6.529606466, 6.082365390, 6.235421354, 6.289623106, 6.342132023, 6.352220204, 6.334586068,  }},
            { 0.800, {5.794102813, 6.119967421, 6.433076205, 6.539475636, 6.186484566, 6.435523182, 6.431646156, 6.407919400, 6.432680426,  }},
            { 0.820, {6.786307473, 6.798512830, 6.644994304, 6.431243922, 6.605693257, 6.573081870, 6.485523196, 6.647657151, 6.569408992,  }},
            { 0.840, {6.844782263, 6.943178361, 6.656769403, 6.872352405, 6.700218009, 6.771930473, 6.721041390, 6.782289050, 6.762822962,  }},
            { 0.860, {7.088347854, 6.960639009, 6.532078679, 6.898412494, 6.880336781, 6.852406712, 6.891525582, 6.935269674, 6.988476600,  }},
            { 0.880, {6.252577968, 6.851231806, 6.626226890, 6.993188189, 7.049647160, 7.078556174, 7.242805161, 7.192925262, 7.202883438,  }},
            { 0.900, {6.819916808, 7.132436700, 7.176568139, 7.189491256, 7.431380734, 7.378595297, 7.544714318, 7.514003621, 7.554480053,  }},
            { 0.920, {6.777940140, 7.144237204, 7.204978882, 7.604584195, 7.519142093, 7.889519246, 7.862725987, 7.964606106, 7.950408845,  }},
            { 0.940, {7.085566636, 6.932371597, 7.456006267, 7.790529979, 7.977461198, 8.016757473, 8.257255226, 8.388382819, 8.553162057,  }},
            { 0.960, {7.358031462, 7.796285504, 7.951933608, 8.120275091, 8.575074908, 8.687411774, 8.889521796, 9.081920095, 9.296666675,  }},
            { 0.980, {7.658246623, 7.243759719, 8.228539337, 8.469913967, 9.090760953, 9.308001862, 9.628059101, 10.00637167, 10.27895209,  }},
            { 1.000, {7.730456974, 8.352453520, 8.432813564, 9.297166370, 9.458700974, 10.17915952, 10.65215899, 11.08551783, 11.55745507,  }}};

		static inline std::map<double, std::vector<double>> mean_lvl_spacing = {
            { 0.600, {0.083786840, 0.041310933, 0.021381415, 0.011473215, 0.006435165, 0.003153280, 0.001596913, 0.000874774, 0.000419791,  }},
            { 0.620, {0.077316850, 0.049914282, 0.020783370, 0.012164812, 0.005736300, 0.003065167, 0.001563999, 0.000806929, 0.000423836,  }},
            { 0.640, {0.085542907, 0.040712767, 0.023077928, 0.011028200, 0.005579701, 0.002996747, 0.001581916, 0.000807107, 0.000405838,  }},
            { 0.660, {0.087649849, 0.039819701, 0.022810676, 0.011037844, 0.005900720, 0.002951189, 0.001645562, 0.000807343, 0.000436489,  }},
            { 0.680, {0.085617530, 0.040028476, 0.021322028, 0.011973239, 0.005946582, 0.003006185, 0.001577057, 0.000794558, 0.000419843,  }},
            { 0.700, {0.087873182, 0.040306042, 0.022259175, 0.012501008, 0.005583054, 0.003200803, 0.001662605, 0.000787940, 0.000417852,  }},
            { 0.720, {0.082582880, 0.044824908, 0.024375279, 0.012097249, 0.005863311, 0.003094082, 0.001624044, 0.000841569, 0.000411133,  }},
            { 0.740, {0.080439253, 0.048743474, 0.025139086, 0.011376850, 0.005917710, 0.003179836, 0.001672982, 0.000818965, 0.000434639,  }},
            { 0.760, {0.088256177, 0.043435366, 0.023889431, 0.012694229, 0.006070235, 0.003232923, 0.001635758, 0.000844656, 0.000435227,  }},
            { 0.780, {0.081952351, 0.045353853, 0.024672425, 0.011899678, 0.005845556, 0.003512777, 0.001708985, 0.000802673, 0.000455970,  }},
            { 0.800, {0.076092777, 0.044739631, 0.022278580, 0.012152117, 0.006154388, 0.003208988, 0.001677519, 0.000846754, 0.000449382,  }},
            { 0.820, {0.089997569, 0.047684271, 0.023925736, 0.011882980, 0.006565264, 0.003335293, 0.001705511, 0.000900231, 0.000422991,  }},
            { 0.840, {0.089075556, 0.043155405, 0.023616402, 0.013072762, 0.005997788, 0.003345917, 0.001678900, 0.000821425, 0.000448286,  }},
            { 0.860, {0.095983421, 0.042618838, 0.022681130, 0.012903688, 0.005999112, 0.003160354, 0.001629823, 0.000843503, 0.000452247,  }},
            { 0.880, {0.080741306, 0.047919887, 0.022495666, 0.011573847, 0.006083666, 0.003301800, 0.001684242, 0.000869079, 0.000451276,  }},
            { 0.900, {0.083429140, 0.042702447, 0.023776430, 0.012039354, 0.006627554, 0.003421706, 0.001699169, 0.000880119, 0.000440109,  }},
            { 0.920, {0.087485220, 0.049134107, 0.023804117, 0.012073348, 0.006298080, 0.003293327, 0.001640768, 0.000868280, 0.000450456,  }},
            { 0.940, {0.087128682, 0.046552656, 0.024049459, 0.012815717, 0.006380296, 0.003424890, 0.001772876, 0.000922313, 0.000459299,  }},
            { 0.960, {0.089593845, 0.047519998, 0.025817105, 0.012344881, 0.007047873, 0.003616336, 0.001635127, 0.000949312, 0.000459660,  }},
            { 0.980, {0.093022094, 0.045087370, 0.024796290, 0.012533867, 0.007244131, 0.003388708, 0.001794144, 0.000911447, 0.000489207,  }},
            { 1.000, {0.092920178, 0.051333115, 0.025161331, 0.013628306, 0.007006992, 0.003588097, 0.001890809, 0.000967919, 0.000492987,  }}};
		
        static int getIndex(int _Ns)                               { return _Ns - minNs_; };
        static double getBandwidth(double alpha, int _Ns)          { return bandwidth_.contains(alpha) ? bandwidth_[alpha][getIndex(_Ns)] : bandwidth_[alpha - 0.01][getIndex(_Ns)]; };
        static double getVariance(double alpha, int _Ns)           { return variance_.contains(alpha) ? variance_[alpha][getIndex(_Ns)] : variance_[alpha - 0.01][getIndex(_Ns)]; };
        static double getMeanLvlSpacing(double alpha, int _Ns)     { return mean_lvl_spacing.contains(alpha) ? mean_lvl_spacing[alpha][getIndex(_Ns)] : mean_lvl_spacing[alpha - 0.01][getIndex(_Ns)]; };
	} UM_default;


};